@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Evaluación del Desempeño 2025";
}
@functions {
    static Random rnd = new Random();
}

@{
    string[] coloresFuertes = { "#E63946", "#F4A261", "#2A9D8F", "#264653", "#8E44AD", "#D72638", "#3D348B", "#FF7F50" };
}

<div class="container mt-4 mb-5">
    <!-- Encabezado principal -->
    <h2 class="mb-2 text-center">Gestión Institucional de Recursos Humanos</h2>
    <h4 class="mb-4 text-center">
        Evaluación del Desempeño 2025 <br />
    </h4>

    <!-- Texto introductorio -->
    <p>
        Con el objetivo de dar cumplimiento a que todo trabajador debe ser evaluado
        por el proceso de evaluación de desempeño establecido en los
        “Lineamientos Metodológicos Generales para la Evaluación del Desempeño
        de las personas servidoras públicas”, cubiertas por la rectoría del
        Ministerio de Planificación Nacional y Política Económica (MIDEPLAN)
        dispuestas en la Directriz N°029-PLAN, anuando a la Ley de Marco de Empleo
        Público y a la Ley de Fortalecimiento de las Finanzas Públicas.
    </p>

    <!-- Sección "Conglomerado Cualificado" con círculos -->
    <div class="my-5">
        @{
            var idConglomerado = ViewBag.IdConglomerado;
            var listaConglomerados = ViewData["ListaConglomerados"] as List<Modelos.ConglomeradoModel>;
            var nombreConglomerado = listaConglomerados?.FirstOrDefault(c => c.IdConglomerado == idConglomerado)?.NombreConglomerado ?? "Conglomerado ?";
        }

        <h4 class="text-center">@nombreConglomerado</h4>
        <div class="row justify-content-center mt-4">
            @if (ViewBag.PesosConglomerados != null)
            {
                foreach (var item in ViewBag.PesosConglomerados)
                {
                    var randomColor = coloresFuertes[rnd.Next(coloresFuertes.Length)];
                    <div class="col-sm-3 text-center">
                        <div class="rounded-circle text-white mx-auto d-flex align-items-center justify-content-center"
                             style="width:80px; height:80px; background-color:@randomColor;">
                            @item.Porcentaje%
                        </div>
                        @{
                            var listaTiposObjetivos = ViewData["ListaTiposObjetivos"] as List<Modelos.TiposObjetivosModel>;
                            var nombreTipo = listaTiposObjetivos?.FirstOrDefault(t => t.IdTipoObjetivo == item.IdTipoObjetivo)?.Tipo;
                            var listaTiposCompetencias = ViewData["ListaTiposCompetencias"] as List<Modelos.TiposCompetenciasModel>;
                            var nombreTipoCompet = listaTiposCompetencias?.FirstOrDefault(t => t.IdTipoCompetencia == item.IdTipoCompetencia)?.Tipo;
                            var nombreFinal = !string.IsNullOrEmpty(nombreTipo) ? nombreTipo
                            : !string.IsNullOrEmpty(nombreTipoCompet) ? nombreTipoCompet
                            : "Desconocido";
                        }
                        <p class="mt-2">@nombreFinal</p>
                    </div>
                }
            }
        </div>
    </div>

    <!-- Fase de Planificación -->
    <div class="mb-5">
        <h5>Fase de Planificación</h5>
        <p>
            La Fase de Planificación es la definición y programación de metas y objetivos
            por parte de la jefatura y su subalterno. Esta asignación se ejecuta en el mes
            de Enero de cada año; la jefatura deberá coordinar y acordar con su colaborador,
            considerando lineamientos, el perfil del cargo y las responsabilidades a su
            cargo, favoreciendo el logro de los objetivos y metas del PEI (30%) y Metas
            correspondientes al POI (30%) y Metas desempeño Individual (50%).
        </p>
        <div class="row">
            <div class="col-md-6">
                <ul>
                    <li><strong>Dependencia:</strong> Informática</li>
                    <li><strong>Funcionario:</strong> Juan Flores</li>
                    <li><strong>Clase Puesto:</strong> Técnico II</li>
                    <li><strong>Jefatura:</strong> Edgar Rivera</li>
                </ul>
            </div>
            <div class="col-md-6">
                <!-- Agrega más datos si es necesario -->
            </div>
        </div>
    </div>

    <!-- SECCIÓN para elegir objetivos y agregarlos a la tabla -->
    <div class="mb-5">
        <h3>Elegir Objetivos:</h3>
        <div class="row g-3 align-items-center">
            <div class="col-auto">
                <label for="selectObjetivo" class="col-form-label">Elija el objetivo:</label>
            </div>
            <div class="col-auto">
                <!-- Combobox con datos quemados -->
                <select id="selectObjetivo" class="form-select">
                    <option value="ID1|Objetivo Departamento 1|Departamental">ID1 - Objetivo Departamento 1</option>
                    <option value="ID2|Objetivo Departamento 2|Departamental">ID2 - Objetivo Departamento 2</option>
                    <option value="ID10|Objetivo Individual 10|Individual">ID10 - Objetivo Individual 10</option>
                    <option value="ID11|Objetivo Individual 11|Individual">ID11 - Objetivo Individual 11</option>
                </select>
            </div>

            <div class="col-auto">
                <label for="inputPeso" class="col-form-label">Ingrese un Peso:</label>
            </div>
            <div class="col-auto">
                <input type="text" id="inputPeso" class="form-control" placeholder="Ej: 25" />
            </div>

            <div class="col-auto">
                <button type="button" class="btn btn-success" onclick="agregarFila()">Agregar fila</button>
            </div>
        </div>
    </div>

    <!-- TABLA unificada -->
    <div class="mb-5">
        <table id="tablaObjetivos" class="table table-bordered mt-3">
            <thead>
                <tr>
                    <th>Objetivo</th>
                    <th>Tipo</th>
                    <th>Peso</th>
                    <th>Meta</th>
                    <th>Actual</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                <!-- La tabla inicia vacía -->
            </tbody>
        </table>
    </div>

    <!-- Barra de progreso general (ejemplo 80%) -->
    <div class="mb-4">
        <div class="d-flex justify-content-between">
            <span>Progreso General</span>
            <span>80%</span>
        </div>
        <div class="progress">
            <div class="progress-bar bg-success" role="progressbar" style="width: 80%;" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100">
            </div>
        </div>
    </div>

    <!-- Resumen Final centrado y alineado -->
    <div class="d-flex justify-content-center">
        <div class="p-4" style="background-color: #f8d7da; max-width: 600px;">
            <h5 class="text-center">Resumen para: Juan Flores</h5>
            <table class="table table-borderless align-middle">
                <tbody>
                    <tr>
                        <td><strong>Objetivos Departamento:</strong></td>
                        <td>Deseado: 30% | Calificación:</td>
                        <td style="width: 100px;"><input type="text" class="form-control" placeholder="20%" /></td>
                    </tr>
                    <tr>
                        <td><strong>Objetivos Individuales:</strong></td>
                        <td>Deseado: 50% | Calificación:</td>
                        <td style="width: 100px;"><input type="text" class="form-control" placeholder="10%" /></td>
                    </tr>
                    <tr>
                        <td><strong>Competencias:</strong></td>
                        <td>Deseado: 20% | Calificación:</td>
                        <td style="width: 100px;"><input type="text" class="form-control" placeholder="15%" /></td>
                    </tr>
                    <tr>
                        <td><strong>Resultado:</strong></td>
                        <td>Deseado: 100% | Calificación:</td>
                        <td style="width: 100px;"><input type="text" class="form-control" placeholder="45%" /></td>
                    </tr>
                </tbody>
            </table>
            <div class="text-center">
                <button class="btn btn-success mt-3">Enviar a Revisión</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de confirmación (opcional) -->
<div class="modal fade" id="confirmacionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">Confirmación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p id="mensajeConfirmacion">¿Está seguro de realizar esta acción?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                <button type="button" class="btn btn-danger" id="btnEliminar">Sí</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function agregarFila() {
            // Obtener el valor del combobox y el input de peso
            const select = document.getElementById("selectObjetivo");
            const inputPeso = document.getElementById("inputPeso");

            // Valor seleccionado: formato "ID|Nombre|Tipo"
            const valorSeleccionado = select.value;
            if (!valorSeleccionado) {
                alert("Seleccione un objetivo.");
                return;
            }
            const [idObj, nombreObj, tipoObj] = valorSeleccionado.split("|");

            // Obtener el peso ingresado
            const pesoIngresado = inputPeso.value;
            if (!pesoIngresado) {
                alert("Ingrese un peso.");
                return;
            }

            // Crear la nueva fila
            const tbody = document.querySelector("#tablaObjetivos tbody");
            const nuevaFila = document.createElement("tr");

            // Celda de Objetivo
            const tdObjetivo = document.createElement("td");
            tdObjetivo.innerText = nombreObj;

            // Celda de Tipo
            const tdTipo = document.createElement("td");
            tdTipo.innerText = tipoObj;

            // Celda de Peso
            const tdPeso = document.createElement("td");
            tdPeso.innerText = pesoIngresado + "%";

            // Celda de Meta (fijo 100%)
            const tdMeta = document.createElement("td");
            tdMeta.innerText = "100%";

            // Celda de Actual (fijo 0%)
            const tdActual = document.createElement("td");
            tdActual.innerText = "0%";

            // Celda de Acciones
            const tdAcciones = document.createElement("td");

            // Solo se deja el botón "Eliminar"
            const btnEliminar = document.createElement("button");
            btnEliminar.classList.add("btn", "btn-sm", "btn-danger");
            btnEliminar.innerText = "Eliminar";
            btnEliminar.onclick = function() {
                tbody.removeChild(nuevaFila);
            };

            tdAcciones.appendChild(btnEliminar);

            // Agregar celdas a la fila
            nuevaFila.appendChild(tdObjetivo);
            nuevaFila.appendChild(tdTipo);
            nuevaFila.appendChild(tdPeso);
            nuevaFila.appendChild(tdMeta);
            nuevaFila.appendChild(tdActual);
            nuevaFila.appendChild(tdAcciones);

            // Insertar la fila en la tabla
            tbody.appendChild(nuevaFila);

            // Limpiar el input de peso
            inputPeso.value = "";
        }
    </script>
}
